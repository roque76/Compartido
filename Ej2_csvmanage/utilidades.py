#ARCHIVO CON FUNCIONES PARA CORRER EN RUNNER.PY
import functools
#FUNCION QUE CALCULA VENTAS TOTALES
def vet_tot(data):
    ventas=list(map(lambda x:x["Venta Millones"],data))
    v_float=list(map(lambda y:float(y),ventas))
    vent_tot=round(functools.reduce(lambda counter,item:counter+item,v_float),2)
    return vent_tot

#FUNCION QUE CALCULA VENTAS TOTALES POR AÑO
def vet_años(data):
    años=sorted(list(set(map(lambda x:x["Ano"],data))))
    
    v_años=[]
    a1980=list(filter(lambda x:x["Ano"]=="1980",data))
    vent_1980=list(map(lambda x:float(x["Venta Millones"]),a1980))
    vtot_1980=functools.reduce(lambda counter,item:counter+item,vent_1980)
    a1981=list(filter(lambda x:x["Ano"]=="1981",data))
    vent_1981=list(map(lambda x:float(x["Venta Millones"]),a1981))
    vtot_1981=functools.reduce(lambda counter,item:counter+item,vent_1981)
    a1982=list(filter(lambda x:x["Ano"]=="1982",data))
    vent_1982=list(map(lambda x:float(x["Venta Millones"]),a1982))
    vtot_1982=functools.reduce(lambda counter,item:counter+item,vent_1982)
    a1983=list(filter(lambda x:x["Ano"]=="1983",data))
    vent_1983=list(map(lambda x:float(x["Venta Millones"]),a1983))
    vtot_1983=functools.reduce(lambda counter,item:counter+item,vent_1983)
    a1984=list(filter(lambda x:x["Ano"]=="1984",data))
    vent_1984=list(map(lambda x:float(x["Venta Millones"]),a1984))
    vtot_1984=functools.reduce(lambda counter,item:counter+item,vent_1984)
    a1985=list(filter(lambda x:x["Ano"]=="1985",data))
    vent_1985=list(map(lambda x:float(x["Venta Millones"]),a1985))
    vtot_1985=functools.reduce(lambda counter,item:counter+item,vent_1985)
    a1986=list(filter(lambda x:x["Ano"]=="1986",data))
    vent_1986=list(map(lambda x:float(x["Venta Millones"]),a1986))
    vtot_1986=functools.reduce(lambda counter,item:counter+item,vent_1986)
    a1987=list(filter(lambda x:x["Ano"]=="1987",data))
    vent_1987=list(map(lambda x:float(x["Venta Millones"]),a1987))
    vtot_1987=functools.reduce(lambda counter,item:counter+item,vent_1987)
    a1988=list(filter(lambda x:x["Ano"]=="1988",data))
    vent_1988=list(map(lambda x:float(x["Venta Millones"]),a1988))
    vtot_1988=functools.reduce(lambda counter,item:counter+item,vent_1988)
    a1989=list(filter(lambda x:x["Ano"]=="1989",data))
    vent_1989=list(map(lambda x:float(x["Venta Millones"]),a1989))
    vtot_1989=functools.reduce(lambda counter,item:counter+item,vent_1989)
    a1990=list(filter(lambda x:x["Ano"]=="1990",data))
    vent_1990=list(map(lambda x:float(x["Venta Millones"]),a1990))
    vtot_1990=functools.reduce(lambda counter,item:counter+item,vent_1990)
    a1991=list(filter(lambda x:x["Ano"]=="1991",data))
    vent_1991=list(map(lambda x:float(x["Venta Millones"]),a1991))
    vtot_1991=functools.reduce(lambda counter,item:counter+item,vent_1991)
    a1992=list(filter(lambda x:x["Ano"]=="1992",data))
    vent_1992=list(map(lambda x:float(x["Venta Millones"]),a1992))
    vtot_1992=functools.reduce(lambda counter,item:counter+item,vent_1992)
    a1993=list(filter(lambda x:x["Ano"]=="1993",data))
    vent_1993=list(map(lambda x:float(x["Venta Millones"]),a1993))
    vtot_1993=functools.reduce(lambda counter,item:counter+item,vent_1993)
    a1994=list(filter(lambda x:x["Ano"]=="1994",data))
    vent_1994=list(map(lambda x:float(x["Venta Millones"]),a1994))
    vtot_1994=functools.reduce(lambda counter,item:counter+item,vent_1994)
    a1995=list(filter(lambda x:x["Ano"]=="1995",data))
    vent_1995=list(map(lambda x:float(x["Venta Millones"]),a1995))
    vtot_1995=functools.reduce(lambda counter,item:counter+item,vent_1995)
    a1996=list(filter(lambda x:x["Ano"]=="1996",data))
    vent_1996=list(map(lambda x:float(x["Venta Millones"]),a1996))
    vtot_1996=functools.reduce(lambda counter,item:counter+item,vent_1996)
    a1997=list(filter(lambda x:x["Ano"]=="1997",data))
    vent_1997=list(map(lambda x:float(x["Venta Millones"]),a1997))
    vtot_1997=functools.reduce(lambda counter,item:counter+item,vent_1997)
    a1998=list(filter(lambda x:x["Ano"]=="1998",data))
    vent_1998=list(map(lambda x:float(x["Venta Millones"]),a1998))
    vtot_1998=functools.reduce(lambda counter,item:counter+item,vent_1998)
    a1999=list(filter(lambda x:x["Ano"]=="1999",data))
    vent_1999=list(map(lambda x:float(x["Venta Millones"]),a1999))
    vtot_1999=functools.reduce(lambda counter,item:counter+item,vent_1999)
    a2000=list(filter(lambda x:x["Ano"]=="2000",data))
    vent_2000=list(map(lambda x:float(x["Venta Millones"]),a2000))
    vtot_2000=functools.reduce(lambda counter,item:counter+item,vent_2000)
    a2001=list(filter(lambda x:x["Ano"]=="2001",data))
    vent_2001=list(map(lambda x:float(x["Venta Millones"]),a2001))
    vtot_2001=functools.reduce(lambda counter,item:counter+item,vent_2001)
    a2001=list(filter(lambda x:x["Ano"]=="2001",data))
    vent_2001=list(map(lambda x:float(x["Venta Millones"]),a2001))
    vtot_2001=functools.reduce(lambda counter,item:counter+item,vent_2001)
    a2002=list(filter(lambda x:x["Ano"]=="2002",data))
    vent_2002=list(map(lambda x:float(x["Venta Millones"]),a2002))
    vtot_2002=functools.reduce(lambda counter,item:counter+item,vent_2002)
    a2003=list(filter(lambda x:x["Ano"]=="2003",data))
    vent_2003=list(map(lambda x:float(x["Venta Millones"]),a2003))
    vtot_2003=functools.reduce(lambda counter,item:counter+item,vent_2003)
    a2004=list(filter(lambda x:x["Ano"]=="2004",data))
    vent_2004=list(map(lambda x:float(x["Venta Millones"]),a2004))
    vtot_2004=functools.reduce(lambda counter,item:counter+item,vent_2004)
    a2005=list(filter(lambda x:x["Ano"]=="2005",data))
    vent_2005=list(map(lambda x:float(x["Venta Millones"]),a2005))
    vtot_2005=functools.reduce(lambda counter,item:counter+item,vent_2005)
    a2006=list(filter(lambda x:x["Ano"]=="2006",data))
    vent_2006=list(map(lambda x:float(x["Venta Millones"]),a2006))
    vtot_2006=functools.reduce(lambda counter,item:counter+item,vent_2006)
    a2007=list(filter(lambda x:x["Ano"]=="2007",data))
    vent_2007=list(map(lambda x:float(x["Venta Millones"]),a2007))
    vtot_2007=functools.reduce(lambda counter,item:counter+item,vent_2007)
    a2008=list(filter(lambda x:x["Ano"]=="2008",data))
    vent_2008=list(map(lambda x:float(x["Venta Millones"]),a2008))
    vtot_2008=functools.reduce(lambda counter,item:counter+item,vent_2008)
    a2009=list(filter(lambda x:x["Ano"]=="2009",data))
    vent_2009=list(map(lambda x:float(x["Venta Millones"]),a2009))
    vtot_2009=functools.reduce(lambda counter,item:counter+item,vent_2009)
    a2010=list(filter(lambda x:x["Ano"]=="2010",data))
    vent_2010=list(map(lambda x:float(x["Venta Millones"]),a2010))
    vtot_2010=functools.reduce(lambda counter,item:counter+item,vent_2010)
    a2011=list(filter(lambda x:x["Ano"]=="2011",data))
    vent_2011=list(map(lambda x:float(x["Venta Millones"]),a2011))
    vtot_2011=functools.reduce(lambda counter,item:counter+item,vent_2011)
    a2012=list(filter(lambda x:x["Ano"]=="2012",data))
    vent_2012=list(map(lambda x:float(x["Venta Millones"]),a2012))
    vtot_2012=functools.reduce(lambda counter,item:counter+item,vent_2012)
    a2013=list(filter(lambda x:x["Ano"]=="2013",data))
    vent_2013=list(map(lambda x:float(x["Venta Millones"]),a2013))
    vtot_2013=functools.reduce(lambda counter,item:counter+item,vent_2013)
    a2014=list(filter(lambda x:x["Ano"]=="2014",data))
    vent_2014=list(map(lambda x:float(x["Venta Millones"]),a2014))
    vtot_2014=functools.reduce(lambda counter,item:counter+item,vent_2014)
    a2015=list(filter(lambda x:x["Ano"]=="2015",data))
    vent_2015=list(map(lambda x:float(x["Venta Millones"]),a2015))
    vtot_2015=functools.reduce(lambda counter,item:counter+item,vent_2015)
    a2016=list(filter(lambda x:x["Ano"]=="2016",data))
    vent_2016=list(map(lambda x:float(x["Venta Millones"]),a2016))
    vtot_2016=functools.reduce(lambda counter,item:counter+item,vent_2016)
    a2017=list(filter(lambda x:x["Ano"]=="2017",data))
    vent_2017=list(map(lambda x:float(x["Venta Millones"]),a2017))
    vtot_2017=functools.reduce(lambda counter,item:counter+item,vent_2017)
    v_años.append(vtot_1980) 
    v_años.append(vtot_1981)
    v_años.append(vtot_1982)
    v_años.append(vtot_1983)
    v_años.append(vtot_1984)
    v_años.append(vtot_1985)
    v_años.append(vtot_1986)
    v_años.append(vtot_1987)
    v_años.append(vtot_1988)
    v_años.append(vtot_1989)
    v_años.append(vtot_1990)
    v_años.append(vtot_1991)
    v_años.append(vtot_1992)
    v_años.append(vtot_1993)
    v_años.append(vtot_1994)
    v_años.append(vtot_1995)
    v_años.append(vtot_1996)
    v_años.append(vtot_1997)
    v_años.append(vtot_1998)
    v_años.append(vtot_1999)
    v_años.append(vtot_2000)
    v_años.append(vtot_2001)
    v_años.append(vtot_2002)
    v_años.append(vtot_2003)
    v_años.append(vtot_2004)
    v_años.append(vtot_2005)
    v_años.append(vtot_2006)
    v_años.append(vtot_2007)
    v_años.append(vtot_2008)
    v_años.append(vtot_2009)
    v_años.append(vtot_2010)
    v_años.append(vtot_2011)
    v_años.append(vtot_2012)
    v_años.append(vtot_2013)
    v_años.append(vtot_2014)
    v_años.append(vtot_2015)
    v_años.append(vtot_2016)
    v_años.append(vtot_2017)
    comp=round(functools.reduce(lambda x,counter:x+counter,v_años),2)
    it=zip(años,v_años)
    respuesta2={años:round(v_años,2) for años,v_años in it }
    return respuesta2,comp
    
