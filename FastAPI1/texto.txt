API: Application Program Interfaces

FastAPI: Framework para crear backend y Application program interfaces (APIs)
go vs node.js vs FastAPI (python)

se crea ambiente virtual y se instala fastapi y uvicorn
uvicorn nombre_archivo:variable que contiene objeto --reload -se lanza api en local host

Documentacion interactiva de APIs
OpenAPI: Conjunto de reglas que define como describir, crear API
Swagger: conjunto de programas que permiten funcionar con API : obtiene especificacion 
se activa con url/docs
 SwaggerUI: Muestra de forma grafica (html) API documentada

ReDoc: alternativa a Swagger
se activa con url/redoc

PATH OPERATIONS: Compuesta de path decorator y path function
Paths= a la derecha de dominio /.../
myproject.com/PATH/ROUTES/ENDPOINTS

Operations= diferentes metodos http
mas populares
GET, POST, DELETE, PUT, OPTIONS, HEAD, PATCH, TRACE

Path parameters (obligatorio)
definicion variable dentro de un endpoint/path
path/{"nombre variable"}
parametro dentro de url

Query parameters (opcional)
&=unir parametros opcionales dentro de url
path_opcional?query_name=valor&query_name2=valor2
ej:
http://127.0.0.1:8000/person/detail?name=santiago&age=12

Request/Response Body {JSON}
headers & Body
cliente a servidor= Request
servidor a cliente= Response
formato JSON de cliente a API

MODELOS
Creacion de modelos - Pydantic: Base Model 
limites validaciones de parametros ej nombre <50 caracteres>0

query parameters
para strings
max_length, min_length, regex
para int
ge=greater or equal than
le=lower or equal than
gt= greater than
lt= lower than

descripcion y titulo a cada parametro
title,description

validaciones de query parameters, request body y path parameters y modelos

Tipo de datos especiales
enum = conjunto de strings especificos
httpURL
File Path: ruta de archivo
Directory Path: ruta de directorio
EmailStr= "abd"@"abc"."fdf"
PaymentCardNumber
IP Adress
Negative/Positive int float

Automatizar request body para pruebas en API
parametro example dentro de cada atributo 
o 
subclase config con nombre example para todo el objeto y sus atributos

Automatizar path y query parameters

response model: atributo de path operation. Respuesta que se le da a usuario en path operation
Path operation debe ir con path operation function

STATUS CODES
100 : Information
200 : OK
201 : CREATED
204 : No content
300 : Redireccion
400 : Error de cliente
404 : Endpoint que no existe
422 : Validation Error
500 : Internal server error

formularios: campos que se recibe de frontend, ya no de json,html

cookie= pieza de codigo que servidor mete en computadora en web para trackear info
header parameters= ej json ej html. cabeceras http puede ser de cliente a servidor y de servidor a cliente

archivos dentro de fastapi con
files: archivos dentro de fastapi ej imagen, videos
Upload file: de cliente a api
  viene con paramteros:
    - filename
    - content-type
    - file: archivo en si mismo


HTTP EXCEPTION: Clase para operaciones prohibidas/no soportadas
accesos a datos que no existen o no se tienen permiso

tags: orden de path operations parametro
"""docstring"""

Deprecar path operation
Dejar sin efecto path operation

RECORDERIS
deactivate: desactivar entorno virtual
python3 -m venv [nombre ambiente virtual]: crear ambiente virtual
pip install fastapi uvicorn: instalar frameworks necesarios

EJEMPLO API Twitter

MODELOS TWEETS & USERR